{"version":3,"file":"component---src-templates-skeleton-js-608f106caec8e751d658.js","mappings":"iSACW,EAAS,iCACTA,EAAU,kCAEVC,EAAO,+BCiGlB,MAtDuBC,GAEfC,EAAAA,cAACC,EAAAA,EAAM,KACHD,EAAAA,cAACE,EAAAA,EAAI,CAACC,MAAOJ,EAAMK,KAAKC,eAAeC,YAAYH,QACnDH,EAAAA,cAACO,EAAAA,EAAW,CACRC,OAAOC,EAAAA,EAAAA,GAASV,EAAMK,KAAKC,eAAeC,YAAYI,IAAIC,iBAC1DC,MAAO,CACHC,MAAO,OACPC,UAAW,UAInBd,EAAAA,cAACe,EAAAA,EAAS,CAACC,UAAW,CAACC,EAAqB,eAAeC,KAAK,MAC5DlB,EAAAA,cAACmB,EAAAA,EAAG,KACAnB,EAAAA,cAACoB,EAAAA,EAAG,KACApB,EAAAA,cAAA,MAAIgB,UDxDT,iCCwD2CjB,EAAMK,KAAKC,eAAeC,YAAYH,SAGpFH,EAAAA,cAACmB,EAAAA,EAAG,CAACH,UAAU,0BACXhB,EAAAA,cAACoB,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GACbtB,EAAAA,cAAA,SAAID,EAAMK,KAAKC,eAAeC,YAAYiB,eAGlDvB,EAAAA,cAACmB,EAAAA,EAAG,CAACH,UAAW,CAACC,EAAwB,8CAA8CC,KAAK,MACxFlB,EAAAA,cAACoB,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GACbtB,EAAAA,cAAA,UAAI,OACJA,EAAAA,cAAA,SAAID,EAAMK,KAAKC,eAAeC,YAAYkB,MAE9CxB,EAAAA,cAACoB,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GACbtB,EAAAA,cAAA,UAAI,SACJA,EAAAA,cAAA,SAAID,EAAMK,KAAKC,eAAeC,YAAYmB,WAE9CzB,EAAAA,cAACoB,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GACbtB,EAAAA,cAAA,UAAI,QACJA,EAAAA,cAAA,SAAID,EAAMK,KAAKC,eAAeC,YAAYoB,QAGlD1B,EAAAA,cAACmB,EAAAA,EAAG,CAACH,UAAW,CAAC,iCAAiCE,KAAK,MACnDlB,EAAAA,cAACoB,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GACuC,KAAtDvB,EAAMK,KAAKC,eAAeC,YAAYqB,KAAKC,OACxC5B,EAAAA,cAAC6B,EAAAA,EAAc,CAACC,QAAS9B,EAAAA,cAAC+B,EAAAA,EAAO,CAACC,GAAG,oBAAmB,mBACrDhC,EAAAA,cAAA,QAAMgB,UAAU,WACZhB,EAAAA,cAACiC,EAAAA,EAAM,CAACjB,UAAWC,EAAuBiB,UAAQ,EAACtB,MAAO,CAAEuB,cAAe,QAAUC,KAAK,KAAKC,OAAK,EAACC,QAAQ,aAAavC,EAAMK,KAAKC,eAAeC,YAAYiC,UAIrKvC,EAAAA,cAACiC,EAAAA,EAAM,CAACjB,UAAWC,EAAuBuB,OAAO,SAASC,KAAM1C,EAAMK,KAAKC,eAAeC,YAAYqB,KAAMS,KAAK,KAAKC,OAAK,EAACC,QAAQ,QAAQvC,EAAMK,KAAKC,eAAeC,YAAYiC,W","sources":["webpack://gatsby-starter-hello-world/./src/templates/skeleton.module.scss","webpack://gatsby-starter-hello-world/./src/templates/skeleton.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var button = \"skeleton-module--button--506c3\";\nexport var details = \"skeleton-module--details--945b6\";\nexport var gif = \"skeleton-module--gif--3558b\";\nexport var info = \"skeleton-module--info--fc32c\";\nexport var media = \"skeleton-module--media--ade37\";\nexport var title = \"skeleton-module--title--6935f\";","import React from 'react'\n\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\n\nimport Head from '../components/head'\nimport {GatsbyImage, getImage} from 'gatsby-plugin-image'\n\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport Container from 'react-bootstrap/Container'\nimport Button from 'react-bootstrap/Button'\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Tooltip from 'react-bootstrap/Tooltip'\n\n// import Hero from '../components/hero'\n\n// import eventsStyles from './events.module.scss'\nimport * as skeletonStyles from './skeleton.module.scss'\n\nexport const query = graphql`\n    query($slug: String!) {\n        markdownRemark(fields: {slug: {eq: $slug } }) {\n            frontmatter {\n                category\n                description\n                who\n                location\n                date\n                title\n                link\n                button\n                img {\n                  childImageSharp {\n                    gatsbyImageData(quality:100)\n                  }\n                }\n            }\n            html\n            fields {\n                slug\n            }\n        }\n    }\n`\n\nconst ConnectEvents = (props) => {\n    return (\n        <Layout>\n            <Head title={props.data.markdownRemark.frontmatter.title}/>\n            <GatsbyImage\n                image={getImage(props.data.markdownRemark.frontmatter.img.childImageSharp)}\n                style={{\n                    width:`100%`,\n                    maxHeight:`70vh`\n\n                }}\n            />\n            <Container className={[skeletonStyles.info, \"text-center\"].join(' ')}>\n                <Row>\n                    <Col >\n                        <h1 className={skeletonStyles.title}>{props.data.markdownRemark.frontmatter.title}</h1>\n                    </Col>\n                </Row>\n                <Row className=\"justify-content-center\">\n                    <Col xs={12} md={8}>\n                        <p>{props.data.markdownRemark.frontmatter.description}</p>\n                    </Col>\n                </Row>\n                <Row className={[skeletonStyles.details, \"justify-content-center d-flex mt-2 mt-md-4\"].join(' ')}>\n                    <Col xs={12} md={3}>\n                        <h3>Who</h3>\n                        <p>{props.data.markdownRemark.frontmatter.who}</p>\n                    </Col>\n                    <Col xs={12} md={3}>\n                        <h3>Where</h3>\n                        <p>{props.data.markdownRemark.frontmatter.location}</p>\n                    </Col>\n                    <Col xs={12} md={3}>\n                        <h3>When</h3>\n                        <p>{props.data.markdownRemark.frontmatter.date}</p>\n                    </Col>\n                </Row>\n                <Row className={[\"justify-content-center d-flex\"].join(' ')}>\n                    <Col xs={12} md={4}>\n                    { props.data.markdownRemark.frontmatter.link.trim() === \"\" ?\n                        (<OverlayTrigger overlay={<Tooltip id=\"tooltip-disabled\">Not Ready Yet!</Tooltip>}>\n                            <span className=\"d-block\">\n                                <Button className={skeletonStyles.button} disabled style={{ pointerEvents: 'none' }} size=\"lg\" block variant=\"secondary\">{props.data.markdownRemark.frontmatter.button}</Button>\n                            </span>\n                        </OverlayTrigger>\n                        )\n                        : (<Button className={skeletonStyles.button} target=\"_blank\" href={props.data.markdownRemark.frontmatter.link} size=\"lg\" block variant=\"dark\">{props.data.markdownRemark.frontmatter.button}</Button>) }\n                    </Col>\n                </Row>\n            </Container>\n        </Layout>\n    )\n}\n\nexport default ConnectEvents\n"],"names":["details","info","props","React","Layout","Head","title","data","markdownRemark","frontmatter","GatsbyImage","image","getImage","img","childImageSharp","style","width","maxHeight","Container","className","skeletonStyles","join","Row","Col","xs","md","description","who","location","date","link","trim","OverlayTrigger","overlay","Tooltip","id","Button","disabled","pointerEvents","size","block","variant","button","target","href"],"sourceRoot":""}